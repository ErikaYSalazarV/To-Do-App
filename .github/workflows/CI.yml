name: continuous integration

on: [push, pull_request]

env:
  NODE_VERSION: 14

jobs:
  test:
    runs-on: ubuntu-20.04
    env:
      working-directory: ./app/

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Node.js
      uses: actions/setup-node@v2
      with:
        node-version: ${{ env.NODE_VERSION }}
        
    - name: Install dependencies
      working-directory: ${{ env.working-directory }}
      run: |
          if [ -e yarn.lock ]; then
          yarn install --frozen-lockfile
          elif [ -e package-lock.json ]; then
          npm ci
          else
          npm i
          fi
    - name: Grant execute permissions
      run: sudo chmod +x /home/runner/work/To-Do-App/To-Do-App/app
      
    - name: Test the app
      working-directory: ${{ env.working-directory }} 
      run: npm test
      
  build:
  
    runs-on: ubuntu-20.04
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      -
        name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./app/Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/todoapp:latest
